name: Run tests

on:
  push:
    branches:
      - master
      - develop
      - release*
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  static-code-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: prepare
        run: pwd && find . && sudo apt update && sudo apt install shellcheck
      - name: "shellcheck main"
        run: ./prj/run-shellcheck.sh
      - name: "shellcheck standalones"
        run: shellcheck --exclude "SC2181,SC2155,SC2119,SC2031" activate && shellcheck --exclude "SC2181,SC2155,SC2119,SC2031" deactivate
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest,macos-latest]
      max-parallel: 3
    runs-on: ${{ matrix.os }}
    env:
      ENTANDO_PIPELINE_EXECUTION: "true"
      XDEV_TEST_ENABLE_SYSTEM_TESTS: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "windows tests"
        if: matrix.os == 'windows-latest'
        run: |
          cd ..
          Invoke-WebRequest -OutFile inst.exe -Uri "http://github.com/git-for-windows/git/releases/download/v2.36.0.windows.1/PortableGit-2.36.0-64-bit.7z.exe"
          cmd /C ".\inst.exe -o . -y"
          echo @"
            export ENTANDO_PIPELINE_EXECUTION="true"
            export XDEV_TEST_ENABLE_SYSTEM_TESTS="true"
            {
              source ./entando-cli/activate
              ent run-tests || touch test-error
            } &> test-log
          "@ > run-test.sh
          cmd /C ".\git-bash.exe run-test.sh"
          cat test-log
          if (Test-Path -Path test-error){ exit 1; }
          exit 0
      - name: "posix tests"
        if: matrix.os != 'windows-latest'
        run: |
          bash -c "source ./activate && ent run-tests"
