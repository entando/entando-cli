#!/bin/bash

#H::
#H:: Helps dealing with the local ents
#H::
#H:: Syntax:
#H::  - ent activate {command} ...
#H::
#H:: Commands:

[[ "$1" == "--help" && "$2" == "--short" ]] && {
  echo -e "Helper for managing the local ent installations" && exit 0
}

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" > /dev/null 2>&1 && pwd)"
cd "$DIR/../.." || {
  echo "Internal error: unable to find the script source dir" 1>&2
  exit
}

. s/_base.sh

# ----------------------------------------------------------------------------------------------------------------------
ent_activate() {
  local LIST
  HH="$(parse_help_option "$@")"
  show_help_option "$HH"
  args_or_ask ${HH:+"$HH"} -n -a "ENT" "1///The ent to activate" "$@"
  args_or_ask ${HH:+"$HH"} -n -F "LIST" "--list///Lists the locally available ents" "$@"
  args_or_ask ${HH:+"$HH"} -n -F "DEFSET" "--set-default///Sets the selected ent as default" "$@"

  [ -n "$HH" ] && {
    if $FOR_SOURCED_EXECUTION; then
      return 0
    else
      exit 0
    fi
  }
  
  #if ! $DEFSET && ! $FOR_SOURCED_EXECUTION; then
  #  FATAL "You need to source-execute me"
  #fi
  if ! $FOR_SOURCED_EXECUTION; then
    DEFSET=true
  fi

  # shellcheck disable=SC2035
  [ -z "$ENT" ] && {
    $LIST && {
      __cd "$ENTANDO_HOME/ent"
      # shellcheck disable=SC2012
      ls -d * | cat  
      exit 0
    }
    map-from-stdin "ENTS" $'\n\r' < <(cd "$ENTANDO_HOME/ent" && ls -d *)
    args_or_ask_from_list ENTS -m -e -a ${HH:+"$HH"} ENT 1 "any" \
      "ent installation" "Select the ent to activate" "$@"
  }

  [ ! -d "$ENTANDO_HOME/ent/$ENT" ] && FATAL "Unable to access root dir of ent $ENT"

  if $DEFSET; then
    ent_set_default_ent "$ENT"
    ent_set_profile_default_ent "$ENT"
  fi

  if $FOR_SOURCED_EXECUTION; then
    echo ". $ENTANDO_HOME/activate-$ENT --force 1> /dev/null" > "$COMMAND_FILE"
    # shellcheck disable=SC2034
    ENTANDO_ENT_HOME_FORCE="$ENTANDO_ENT_HOME"
    # shellcheck disable=SC2086
    echo 'echo Version "'$ENT'" activated' >> "$COMMAND_FILE"
    true
  else
    if [ "$ENTANDO_ENT_ACTIVATION_MODE" == "PROXY" ]; then
      # shellcheck disable=SC1090
      . "$ENTANDO_HOME/activate-$ENT" --force 1> /dev/null
      echo "Version \"$ENT\" activated"
    else
      ! $FOR_SOURCED_EXECUTION && {
        _log_i 0 "However, it was not activated on this shell because the command was not sourced"
      }
    fi
  fi
}

ent_set_default_ent() {
  ENT="$1"
  chmod u=rwx "$ENTANDO_HOME/activate" 2>/dev/null
  cp -P "$ENTANDO_HOME/activate-$ENT" "$ENTANDO_HOME/activate"
  chmod u=rx "$ENTANDO_HOME/activate" 2>/dev/null
  _log_i 0 "Ent \"$ENT\" is now the global default ent"
}

ent_set_profile_default_ent() {
  if [ -n "$DESIGNATED_PROFILE" ]; then
    ENT="$1"
    save_cfg_value "ENT_APP_DEFAULT_ENT" "$ENT"
    _log_i 0 "Ent \"$ENT\" is now the default ent for the profile \"$DESIGNATED_PROFILE\""
  fi
}

# ----------------------------------------------------------------------------------------------------------------------

RUN() {
  case "$1" in
    "activate") #H: selects the profile that ent should use
      shift
      #! $FOR_SOURCED_EXECUTION && FATAL "You need to source-execute me"
      ent_activate "$@"
      ;;
    *)
      echo "FATAL: Unknown command \"$1:$2\"" 1>&2
      ;;
  esac
}

if [ "$1" = "--for-sourced-execution" ];  then
  FOR_SOURCED_EXECUTION=true;shift
  COMMAND_FILE="$1";shift
else
  FOR_SOURCED_EXECUTION=false
  COMMAND_FILE=""
fi

RUN "$@"
